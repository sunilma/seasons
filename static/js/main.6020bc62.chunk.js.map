{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,mBACNC,SAAU,eAwBHE,EAZO,SAACC,GACnB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIHK,EAEFZ,EAAaS,GAAhCP,EAFqBU,EAErBV,KAAMC,EAFeS,EAEfT,SACd,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAMb,GACNW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC3BlBe,EAAU,SAACZ,GACb,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAuBV,EAAMa,WAKxDD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCRTG,6MAEFC,MAAQ,CAACf,IAAK,KAAMgB,aAAc,uFAEf,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GAAD,OAAcN,EAAKO,SAAS,CAAExB,IAAKuB,EAASE,OAAOC,YACnD,SAACC,GAAD,OAASV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,oDAM/C,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,eAG9BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAGnCM,EAAAC,EAAAC,cAACqB,EAAD,CAASjB,QAAQ,oEAIxB,OACIN,EAAAC,EAAAC,cAAA,WACKU,KAAKY,wBA3BJC,IAAMC,WAiCxBC,IAASC,OACL5B,EAAAC,EAAAC,cAAC2B,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.6020bc62.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n        text: \"Let's hit the beach!\",\n        iconName: \"sun\"\n    },\n    winter: {\n        text: \"Burr, It is cold\",\n        iconName: \"snowflake\"\n    }\n}\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9){\n        return lat > 0 ? \"summer\" : \"winter\";\n    } else {\n        return lat < 0 ? \"winter\" : \"summer\";\n    }\n};\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season];\n    return (\n        <div className={`season-display ${season}`} >\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{ text }</h1>\n            <i className={`icon-right massive ${iconName} icon`} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">{ props.message }</div>\n        </div>\n    );\n};\n\nSpinner.defaultProps = {\n    message: \"Loading...\"\n};\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\n\nclass App extends React.Component {\n\n    state = {lat: null, errorMessage: \"\"};\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({ lat: position.coords.latitude }),\n            (err) => this.setState({ errorMessage: err.message })\n\n        );\n    }\n\n    renderContent(){\n        if (this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if (!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat={this.state.lat} />;\n        }\n\n        return <Spinner message=\"Please accept location request\" />;\n    }\n\n    render (){\n        return (\n            <div>\n                {this.renderContent()}\n            </div>\n        );\n    };\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}